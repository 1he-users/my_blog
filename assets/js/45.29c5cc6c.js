(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{267:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("在前后端分离的开发模式中，经常会遇到跨域问题，即 Ajax 请求发出去了，服务器也成功响应了，前端就是拿不到这个响应。接下来我们就来好好讨论一下这个问题。")]),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("回顾一下 URI 的组成:")]),t._v(" "),n("p",[n("img",{attrs:{src:t.$withBase("/http/004.png")}})]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),n("p",[t._v("跨域请求的响应一般会被浏览器所拦截，注意，是被浏览器拦截，响应其实是成功到达客户端了。那这个拦截是如何发生呢？")]),t._v(" "),n("p",[t._v("首先要知道的是，浏览器是多进程的，以 Chrome 为例，进程组成如下：\n"),n("img",{attrs:{src:t.$withBase("/http/007.jpg")}}),t._v(" "),n("img",{staticStyle:{"margin-left":"40px"},attrs:{src:t.$withBase("/http/008.jpg")}})]),t._v(" "),t._m(5),t._v(" "),n("p",[t._v("当"),n("code",[t._v("xhr.send")]),t._v("被调用，即 Ajax 请求准备发送的时候，其实还只是在渲染进程的处理。为了防止黑客通过脚本触碰到系统资源，浏览器将每一个渲染进程装进了沙箱，并且为了防止 CPU 芯片一直存在的"),n("strong",[t._v("Spectre")]),t._v(" 和 "),n("strong",[t._v("Meltdown")]),t._v("漏洞，采取了"),n("code",[t._v("站点隔离")]),t._v("的手段，给每一个不同的站点(一级域名不同)分配了沙箱，互不干扰。具体见"),n("a",{attrs:{href:"https://www.youtube.com/watch?v=dBuykrdhK-A&feature=emb_logo",target:"_blank",rel:"noopener noreferrer"}},[t._v("YouTube上Chromium安全团队的演讲视频"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("p",[t._v("在沙箱当中的渲染进程是没有办法发送网络请求的，那怎么办？只能通过网络进程来发送。那这样就涉及到进程间通信(IPC，Inter Process Communication)了。接下来我们看看 chromium 当中进程间通信是如何完成的，在 chromium 源码中调用顺序如下:")]),t._v(" "),n("p",[n("img",{attrs:{src:t.$withBase("/http/006.jpg")}})]),t._v(" "),n("p",[t._v("可能看了你会比较懵，如果想深入了解可以去看看 chromium 最新的源代码，"),n("a",{attrs:{href:"https://chromium.googlesource.com/chromium/src/+/refs/heads/master/ipc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPC源码地址"),n("OutboundLink")],1),t._v("及"),n("a",{attrs:{href:"https://blog.csdn.net/Luoshengyang/article/details/47822689",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chromium IPC源码解析文章"),n("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(6),t._v(" "),n("p",[t._v("好，现在数据传递给了浏览器主进程，主进程接收到后，才真正地发出相应的网络请求。")]),t._v(" "),n("p",[t._v("在服务端处理完数据后，将响应返回，主进程检查到跨域，且没有cors(后面会详细说)响应头，将响应体全部丢掉，并不会发送给渲染进程。这就达到了拦截数据的目的。")]),t._v(" "),n("p",[t._v("接下来我们来说一说解决跨域问题的几种方案。")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),n("p",[t._v("请求发出去之前，浏览器做了什么？")]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),n("p",[t._v("我们以 PUT 方法为例。")]),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),n("p",[t._v("当然在服务端也会有响应的操作, 以 express 为例:")]),t._v(" "),t._m(37),n("p",[t._v("前端这样简单地调用一下就好了:")]),t._v(" "),t._m(38),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),n("p",[t._v("what？反向代理？我给你看一张图你就懂了。")]),t._v(" "),n("p",[n("img",{attrs:{src:t.$withBase("/http/009.jpg")}})]),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),n("p",[t._v("好了，那 Nginx 是如何来解决跨域的呢？")]),t._v(" "),t._m(45),t._v(" "),t._m(46),t._m(47),t._v(" "),t._m(48)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"_014-什么是跨域？浏览器如何拦截响应？如何解决？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_014-什么是跨域？浏览器如何拦截响应？如何解决？","aria-hidden":"true"}},[this._v("#")]),this._v(" 014: 什么是跨域？浏览器如何拦截响应？如何解决？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"什么是跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是跨域")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("浏览器遵循"),n("strong",[t._v("同源政策")]),t._v("("),n("code",[t._v("scheme(协议)")]),t._v("、"),n("code",[t._v("host(主机)")]),t._v("和"),n("code",[t._v("port(端口)")]),t._v("都相同则为"),n("code",[t._v("同源")]),t._v(")。非同源站点有这样一些限制:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("不能读取和修改对方的 DOM")]),this._v(" "),s("li",[this._v("不读访问对方的 Cookie、IndexDB 和 LocalStorage")]),this._v(" "),s("li",[this._v("限制 XMLHttpRequest 请求。(后面的话题着重围绕这个)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当浏览器向目标 URI 发 Ajax 请求时，只要当前 URL 和目标 URL 不同源，则产生跨域，被称为"),s("code",[this._v("跨域请求")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("WebKit 渲染引擎")]),this._v("和"),s("strong",[this._v("V8 引擎")]),this._v("都在渲染进程当中。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("总的来说就是利用"),s("code",[this._v("Unix Domain Socket")]),this._v("套接字，配合事件驱动的高性能网络并发库"),s("code",[this._v("libevent")]),this._v("完成进程的 IPC 过程。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cors","aria-hidden":"true"}},[this._v("#")]),this._v(" CORS")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("CORS 其实是 W3C 的一个标准，全称是"),s("code",[this._v("跨域资源共享")]),this._v("。它需要浏览器和服务器的共同支持，具体来说，非 IE 和 IE10 以上支持CORS，服务器需要附加特定的响应头，后面具体拆解。不过在弄清楚 CORS 的原理之前，我们需要清楚两个概念: "),s("strong",[this._v("简单请求")]),this._v("和"),s("strong",[this._v("非简单请求")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("浏览器根据请求方法和请求头的特定字段，将请求做了一下分类，具体来说规则是这样，凡是满足下面条件的属于"),s("strong",[this._v("简单请求")]),this._v(":")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("请求方法为 GET、POST 或者 HEAD")]),t._v(" "),n("li",[t._v("请求头的取值范围: Accept、Accept-Language、Content-Language、Content-Type(只限于三个值"),n("code",[t._v("application/x-www-form-urlencoded")]),t._v("、"),n("code",[t._v("multipart/form-data")]),t._v("、"),n("code",[t._v("text/plain")]),t._v(")")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("浏览器画了这样一个圈，在这个圈里面的就是"),s("strong",[this._v("简单请求")]),this._v(", 圈外面的就是"),s("strong",[this._v("非简单请求")]),this._v("，然后针对这两种不同的请求进行不同的处理。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"简单请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单请求","aria-hidden":"true"}},[this._v("#")]),this._v(" 简单请求")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("它会自动在请求头当中，添加一个"),n("code",[t._v("Origin")]),t._v("字段，用来说明请求来自哪个"),n("code",[t._v("源")]),t._v("。服务器拿到请求之后，在回应时对应地添加"),n("code",[t._v("Access-Control-Allow-Origin")]),t._v("字段，如果"),n("code",[t._v("Origin")]),t._v("不在这个字段的范围中，那么浏览器就会将响应拦截。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("因此，"),s("code",[this._v("Access-Control-Allow-Origin")]),this._v("字段是服务器用来决定浏览器是否拦截这个响应，这是必需的字段。与此同时，其它一些可选的功能性的字段，用来描述如果不会拦截，这些字段将会发挥各自的作用。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Access-Control-Allow-Credentials")]),this._v("。这个字段是一个布尔值，表示是否允许发送 Cookie，对于跨域请求，浏览器对这个字段默认值设为 false，而如果需要拿到浏览器的 Cookie，需要添加这个响应头并设为"),s("code",[this._v("true")]),this._v(", 并且在前端也需要设置"),s("code",[this._v("withCredentials")]),this._v("属性:")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xhr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("withCredentials "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("strong",[t._v("Access-Control-Expose-Headers")]),t._v("。这个字段是给 XMLHttpRequest 对象赋能，让它不仅可以拿到基本的 6 个响应头字段（包括"),n("code",[t._v("Cache-Control")]),t._v("、"),n("code",[t._v("Content-Language")]),t._v("、"),n("code",[t._v("Content-Type")]),t._v("、"),n("code",[t._v("Expires")]),t._v("、"),n("code",[t._v("Last-Modified")]),t._v("和"),n("code",[t._v("Pragma")]),t._v("）, 还能拿到这个字段声明的"),n("strong",[t._v("响应头字段")]),t._v("。比如这样设置:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Access-Control-Expose-Headers: aaa\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("那么在前端可以通过 "),s("code",[this._v("XMLHttpRequest.getResponseHeader('aaa')")]),this._v(" 拿到 "),s("code",[this._v("aaa")]),this._v(" 这个字段的值。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"非简单请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非简单请求","aria-hidden":"true"}},[this._v("#")]),this._v(" 非简单请求")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("非简单请求相对而言会有些不同，体现在两个方面: "),s("strong",[this._v("预检请求")]),this._v("和"),s("strong",[this._v("响应字段")]),this._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://xxx.com'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PUT'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'X-Custom-Header'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当这段代码执行后，首先会发送"),s("strong",[this._v("预检请求")]),this._v("。这个预检请求的请求行和请求体是下面这个格式:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("OPTIONS / HTTP/1.1\nOrigin: 当前地址\nHost: xxx.com\nAccess-Control-Request-Method: PUT\nAccess-Control-Request-Headers: X-Custom-Header\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("预检请求的方法是"),s("code",[this._v("OPTIONS")]),this._v("，同时会加上"),s("code",[this._v("Origin")]),this._v("源地址和"),s("code",[this._v("Host")]),this._v("目标地址，这很简单。同时也会加上两个关键的字段:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Access-Control-Request-Method, 列出 CORS 请求用到哪个HTTP方法")]),this._v(" "),s("li",[this._v("Access-Control-Request-Headers，指定 CORS 请求将要加上什么请求头")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这是"),n("code",[t._v("预检请求")]),t._v("。接下来是"),n("strong",[t._v("响应字段")]),t._v("，响应字段也分为两部分，一部分是对于"),n("strong",[t._v("预检请求")]),t._v("的响应，一部分是对于 "),n("strong",[t._v("CORS 请求")]),t._v("的响应。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("预检请求的响应")]),this._v("。如下面的格式:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("HTTP/1.1 200 OK\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, POST, PUT\nAccess-Control-Allow-Headers: X-Custom-Header\nAccess-Control-Allow-Credentials: true\nAccess-Control-Max-Age: 1728000\nContent-Type: text/html; charset=utf-8\nContent-Encoding: gzip\nContent-Length: 0\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("其中有这样几个关键的"),s("strong",[this._v("响应头字段")]),this._v(":")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("Access-Control-Allow-Origin: 表示可以允许请求的源，可以填具体的源名，也可以填"),n("code",[t._v("*")]),t._v("表示允许任意源请求。")]),t._v(" "),n("li",[t._v("Access-Control-Allow-Methods: 表示允许的请求方法列表。")]),t._v(" "),n("li",[t._v("Access-Control-Allow-Credentials: 简单请求中已经介绍。")]),t._v(" "),n("li",[t._v("Access-Control-Allow-Headers: 表示允许发送的请求头字段")]),t._v(" "),n("li",[t._v("Access-Control-Max-Age: 预检请求的有效期，在此期间，不用发出另外一条预检请求。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在预检请求的响应返回后，如果请求不满足响应头的条件，则触发"),s("code",[this._v("XMLHttpRequest")]),this._v("的"),s("code",[this._v("onerror")]),this._v("方法，当然后面真正的"),s("strong",[this._v("CORS请求")]),this._v("也不会发出去了。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("strong",[t._v("CORS 请求的响应")]),t._v("。绕了这么一大转，到了真正的 CORS 请求就容易多了，现在它和"),n("strong",[t._v("简单请求")]),t._v("的情况是一样的。浏览器自动加上"),n("code",[t._v("Origin")]),t._v("字段，服务端响应头返回"),n("strong",[t._v("Access-Control-Allow-Origin")]),t._v("。可以参考以上简单请求部分的内容。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"jsonp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsonp","aria-hidden":"true"}},[this._v("#")]),this._v(" JSONP")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("虽然"),s("code",[this._v("XMLHttpRequest")]),this._v("对象遵循同源政策，但是"),s("code",[this._v("script")]),this._v("标签不一样，它可以通过 src 填上目标地址从而发出 GET 请求，实现跨域请求并拿到响应。这也就是 JSONP 的原理，接下来我们就来封装一个 JSONP:")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("jsonp")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callbackName "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("generateURL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dataStr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dataStr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("&`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    dataStr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`callback=")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("callbackName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("dataStr"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化回调函数名称")]),t._v("\n    callbackName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callbackName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 script 元素并加入到当前文档中")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" scriptEle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    scriptEle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scriptEle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绑定到 window 上，为了后面调用")]),t._v("\n    window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("callbackName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// script 执行完了，成为无用元素，需要清除")]),t._v("\n      document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scriptEle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" express "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" app "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意哦，返回给script标签，浏览器直接把这部分字符串执行")]),t._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("callback"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("('数据包')`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:3000'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拿到数据进行处理")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("和"),s("code",[this._v("CORS")]),this._v("相比，JSONP 最大的优势在于兼容性好，IE 低版本不能使用 CORS 但可以使用 JSONP，缺点也很明显，请求方法单一，只支持 GET 请求。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx","aria-hidden":"true"}},[this._v("#")]),this._v(" Nginx")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Nginx 是一种高性能的"),s("code",[this._v("反向代理")]),this._v("服务器，可以用来轻松解决跨域问题。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("正向代理帮助客户端"),s("strong",[this._v("访问")]),this._v("客户端自己访问不到的服务器，然后将结果返回给客户端。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("反向代理拿到客户端的请求，将请求转发给其他的服务器，主要的场景是维持服务器集群的"),s("strong",[this._v("负载均衡")]),this._v("，换句话说，反向代理帮"),s("strong",[this._v("其它的服务器")]),this._v("拿到请求，然后选择一个合适的服务器，将请求转交给它。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("因此，两者的区别就很明显了，正向代理服务器是帮"),s("strong",[this._v("客户端")]),this._v("做事情，而反向代理服务器是帮其它的"),s("strong",[this._v("服务器")]),this._v("做事情。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("比如说现在客户端的域名为"),s("strong",[this._v("client.com")]),this._v("，服务器的域名为"),s("strong",[this._v("server.com")]),this._v("，客户端向服务器发送 Ajax 请求，当然会跨域了，那这个时候让 Nginx 登场了，通过下面这个配置:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("server {\n  listen  80;\n  server_name  client.com;\n  location /api {\n    proxy_pass server.com;\n  }\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Nginx 相当于起了一个跳板机，这个跳板机的域名也是"),s("code",[this._v("client.com")]),this._v("，让客户端首先访问 "),s("code",[this._v("client.com/api")]),this._v("，这当然没有跨域，然后 Nginx 服务器作为反向代理，将请求转发给"),s("code",[this._v("server.com")]),this._v("，当响应返回时又将响应给到客户端，这就完成整个跨域请求的过程。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("其实还有一些不太常用的方式，大家了解即可，比如"),s("code",[this._v("postMessage")]),this._v("，当然"),s("code",[this._v("WebSocket")]),this._v("也是一种方式，但是已经不属于 HTTP 的范畴，另外一些奇技淫巧就不建议大家去死记硬背了，一方面从来不用，名字都难得记住，另一方面临时背下来，面试官也不会对你印象加分，因为看得出来是背的。当然没有背并不代表减分，把跨域原理和前面三种主要的跨域方式理解清楚，经得起更深一步的推敲，反而会让别人觉得你是一个靠谱的人。")])}],!1,null,null,null);s.default=e.exports}}]);